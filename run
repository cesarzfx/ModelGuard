#!/usr/bin/env bash
set -euo pipefail

cmd="${1:-}"
shift || true

case "$cmd" in
  install)
    python3 -m pip install --upgrade pip
    if [[ -f requirements.txt ]]; then
      pip3 install --user -r requirements.txt
    else
      echo "requirements.txt not found" >&2
      exit 1
    fi
    ;;
  test)
    out="$(pytest --maxfail=1 -q --cov=acme_cli --cov-report=term-missing || true)"
    echo "$out"
    passed="$(echo "$out" | grep -Eo '[0-9]+ passed' | awk '{print $1}' | tail -1)"
    total="$(echo "$out"  | grep -Eo 'collected [0-9]+ items?' | awk '{print $2}' | tail -1)"
    cov="$(echo "$out" | grep -Eo 'TOTAL.+[0-9]+%$' | awk '{print $NF}' | tr -d '%')"
    passed="${passed:-0}"
    total="${total:-0}"
    cov="${cov:-0}"
    echo "${passed}/${total} test cases passed. ${cov}% line coverage achieved."
    test "$passed" -eq "$total"
    ;;
  *)
    # Treat arg as URL file path
    url_file="${cmd}"
    if [[ ! -f "$url_file" ]]; then
      echo "URL file not found: $url_file" >&2
      exit 1
    fi
    python3 -m acme_cli.main "$url_file"
    ;;
esac
